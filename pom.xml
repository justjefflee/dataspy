<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.dataspy</groupId>
  <artifactId>dataspy</artifactId>
  <version>1.0</version>
  <packaging>war</packaging>

  <name>dataspy</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Convenience property to set the GWT version -->
    <gwtVersion>2.2.0</gwtVersion>
    <gxt.version>2.2.4</gxt.version>
    <!-- GWT needs at least java 1.5 -->
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
  </properties>

  <repositories>
    <repository>
        <id>releases</id>
        <name>Releases</name>
        <!--
        <url>https://oss.sonatype.org/content/repositories/releases</url>
        -->
        <url>https://oss.sonatype.org/content/repositories/comextjs-094</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.schemaspy</groupId>
      <artifactId>schemaspy</artifactId>
      <version>5.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.extjs</groupId>
      <artifactId>gxt</artifactId>
      <version>${gxt.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>2.2.0</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>2.2.0</version>
      <scope>provided</scope>
    </dependency>  

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>2.2.0</version>
      <scope>provided</scope>
    </dependency>  

    <dependency>
	  <groupId>net.sourceforge.jtds</groupId>
	  <artifactId>jtds</artifactId>
	  <version>1.2.4</version>
    </dependency>
   	  <dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>5.1.13</version>
	</dependency>
    
    
  </dependencies>


    <build>
    <finalName>dataspy</finalName>
    <plugins>
        <plugin>
           <artifactId>maven-compiler-plugin</artifactId>
           <version>2.3.2</version>
           <configuration>
              <target>1.6</target>
              <source>1.6</source>
           </configuration>
        </plugin>

      <!-- GWT Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.1.0-1</version>
        <executions>
          <execution>

            <goals>
              <goal>compile</goal>
              <!--
              <goal>test</goal>
              <goal>i18n</goal>
              -->
              <goal>generateAsync</goal>
            </goals>
          </execution>
        </executions>
        <!-- Plugin configuration. There are many available options, see gwt-maven-plugin 
          documentation at codehaus.org -->
        <configuration>
          <extraJvmArgs>-Xmx768M -Xms768M -XX:MaxPermSize=348M</extraJvmArgs>
          <runTarget>index.html</runTarget>
          <hostedWebapp>${webappDirectory}</hostedWebapp>
        </configuration>
      </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>exploded</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <webappDirectory>${webappDirectory}</webappDirectory>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
